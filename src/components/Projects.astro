---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import PythonIC from "./icons/Python.astro"
import Streamlit from "./icons/Streamlit.astro"
import Tensorflow from "./icons/Tensorflow.astro"
import Firebase from "./icons/Firebase.astro"
import HEIC from "./icons/HEIC.astro"
import Node from "./icons/Node.astro"
import REACT from "./icons/ReactJS.astro"
import Javascript from "./icons/Javascript.astro"
import Svelte from "./icons/Svelte.astro"

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  REACT: {
    name: "ReactJS",
    class: "bg-blue-600 text-white",
    icon: REACT,
  },
  STREAMLIT: {
    name: "Streamlit",
    class: "bg-black text-white",
    icon: Streamlit,
  },
  TENSORFLOW: {
    name: "Tensorflow",
    class: "bg-[#ff6f00] text-white",
    icon: Tensorflow,
  },
  FIREBASE: {
    name: "Firebase",
    class: "bg-[#ffca28] text-black",
    icon: Firebase,
  },
  PYTHON: {
    name: "Python",
    class: "bg-[#3776AB] text-white",
    icon: PythonIC,
  },
  Javascript: {
    name: "JavaScript",
    class: "bg-[#3776AB] text-white",
    icon: Javascript,
  },
  HEIC: {
    name: "HEIC",
    class: "bg-[#ff4b4b] text-white",
    icon: HEIC,
  },
  Svelte: {
    name: "Svelte",
    class: "bg-[#ff4b4b] text-white",
    icon: Node,
  },
  NODE: {
    name: "Node.js",
    class: "bg-[#68A063] text-white",
    icon: Node,
  },
}
const PROJECTS = [
  {
    title: "Splitwiser",
    description:
      "An open-source alternative to Splitwise that manages shared expenses, built with Next.js, Node.js, and Tailwind CSS to track balances, create groups, and settle debts effortlessly.",
    github: "https://github.com/akshatshahh/splitwiser",
    image: "https://via.placeholder.com/600x400?text=Splitwiser",
    tags: [TAGS.NEXT, TAGS.NODE, TAGS.TAILWIND],
  },
  {
    title: "Predictive Maintenance Research",
    description:
      "Investigated LSTM-based models in Python and TensorFlow to forecast equipment failures using industrial IoT sensor data, demonstrating how predictive maintenance can reduce simulated downtime by 15%.",
    image: "https://via.placeholder.com/600x400?text=Predictive+Maintenance",
    tags: [TAGS.PYTHON, TAGS.TENSORFLOW],
  },
  {
    title: "Artist Search App",
    description:
      "Created as part of USC's CSCI 570 Web Technologies course, this app integrates the Spotify API with a Node.js and React stack to let users search for musicians, explore albums, and preview top tracks in the browser.",
    link: "https://artist-search-app.wl.r.appspot.com/",
    image: "https://via.placeholder.com/600x400?text=Artist+Search+App",
    tags: [TAGS.NODE, TAGS.REACT, TAGS.TAILWIND],
  },
  {
    title: "Brief Bytes",
    description:
      "Designed and developed Brief Bytes, an innovative web platform using Svelte, JavaScript, Node.js, and PocketBase, aimed at simplifying news consumption for time-constrained users. The platform employs web scraping techniques to gather articles and machine learning for summarization, delivering concise yet informative summaries while offering the option to access full articles. Enhanced usability through intuitive UI/UX design and implemented a scalable backend to ensure seamless content delivery. This project empowered users with actionable insights, driving increased engagement and fostering an efficient news consumption experience.",
    //link: "https://devasy23-image-captionning-project-app-5mulol.streamlit.app/",
    github:"https://github.com/Suthar-Naresh/brief-bytes",
    image: "/projects/briefbytes.png", // replace with your project image path
    tags: [ TAGS.NODE,TAGS.Javascript,TAGS.TAILWIND,TAGS.TENSORFLOW], // add tags if needed
  },
  {
    title: "Scholarship Finder",
    description:
      "Developed a web scraping system using BeautifulSoup to collect and parse scholarship data from multiple online sources,creating a comprehensive scholarship database.Implemented data cleaning and normalization techniques leveraging pandas to process and structure the collected scholarship information into a well-organized dataset.Devised a machine learning-based matching algorithm with scikit-learn to analyze user input and generate customized scholarship recommendations, improving search accuracy by 40",
    image: "/projects/scholarshipfinder.png", // replace with your project image path
    link: "https://aagam051-scholarship-finder-hackathon-t5joad.streamlit.app",
    github:"https://github.com/Aagam051/Scholarship-Finder",
    tags: [TAGS.PYTHON, TAGS.STREAMLIT], // add tags if needed
  },
  // {
  //   title: "Hybrid Movie Recommendation System",
  //   description:
  //     "Developed a movie recommendation system capable of providing content-based recommendations and collaborative filtering-based recommendations (used the movielens 100k dataset). Achieved 93% accuracy in predicting user ratings for unseen movies, resulting in improved user experience and a 10% increase in average user engagement. Integrated NLP algorithms to assess user preferences, providing more personalized and curated movie recommendations.",
  //   image: "/projects/movie-recommendation-system.webp", // replace with your project image path
  //   tags: [], // add tags if needed
  // },
  {
    title: "Movie Recommender System",
    description:
      "Engineered a content-based movie recommender system with TF-IDF vectorization and cosine similarity algorithms, attaining a 30% improvement in recommendation relevance for a dataset of 5000+ movies .Optimized data preprocessing pipelines with NumPy and pandas, cutting down processing time for a large movie dataset .Designed and deployed a responsive web application using Streamlit, achieving a 95% user satisfaction rate based on feedback from 100+ beta tester",
    image: "/projects/movie reccomender.png", // replace with your project image path
    link:"https://moviereccomender.streamlit.app",
    github:"https://github.com/akshatshahh/movie-recommender-microsoft",
    tags: [TAGS.PYTHON, TAGS.STREAMLIT], // add tags if needed "Streamlit", "Pillow", "HEIF"
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Image for the project's preview" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github} target="_blank" rel="noopener noreferrer">
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link} target="_blank" rel="noopener noreferrer">
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



